[build-system]
requires=["jupyter_packaging>=0.9,<2"]
build-backend = "jupyter_packaging.build_api"

[license]
file="LICENSE"

[tool.poetry] 
name = "custom_jupyter_LAB-plugin"
version = "1.0.0"
description = ""
authors = ["mai"]

[tool.poetry.dependencies]
python = "^3.7"
nbclassic = { git = "https://github.com/tainella/nbclassic.git" }
notebook = { git = "https://github.com/tainella/notebook.git" }
jupyter-tensorboard = { version = "^0.2.0", optional = true }
jupyterlab-system-monitor = { version = "^0.8.0", optional = true }
jupyterlab-git = { version = "^0.40.1", optional = true }
lckr-jupyterlab-variableinspector = { version = "^3.0.9", optional = true }
jupyterlab_voyager = { version = "^1.0.0", optional = true }

[tool.poetry.extras] 
jupyter-tensorboard = ["jupyter-tensorboard"]
jupyterlab-system-monitor = ["jupyterlab-system-monitor"]
jupyterlab-git = ["jupyterlab-git"]
lckr-jupyterlab-variableinspector = ["lckr-jupyterlab-variableinspector"]
jupyterlab_voyager = ["jupyterlab_voyager"]

[tool.jupyter-packaging.builder]
factory = "jupyter_packaging.npm_builder"

[tool.jupyter-packaging.build-args]
build_cmd = "build:prod:minimize"
path = "jupyterlab/staging"
source_dir= "jupyterlab/staging"
build_dir = "jupyterlab/static"
npm = ["node", "yarn.js"]

[tool.pytest.ini_options]
testpaths="jupyterlab/tests"
norecursedirs="node_modules .git _build"
addopts="--pdbcls=IPython.terminal.debugger:Pdb -v --junitxml=junit.xml"
ignore="tests examples"

[tool.check-manifest]
ignore = ["binder/**", "builder/**", "buildutils/**", "design/**", "dev_mode/**", "examples/**", "packages/**", "scripts/**", "testutils/**", "*.json", "yarn.lock", "readthedocs.yml", ".bumpversion.cfg", ".*", "clean.py", "*.config.js", "release/*", "typedoc-theme/**", "typedoc.js", "jupyterlab/schemas/**", "jupyterlab/static/**", "jupyterlab/themes/**", "jupyterlab/style.js"]

[tool.jupyter-releaser]
skip = ["check-links"]

[tool.jupyter-releaser.options]
ignore-glob = ["packages/ui-components/docs/source/ui_components.rst"]
ignore-links = ["../api/*.*", "https://docs.github.com/en/.*"]
version-cmd = "jlpm bumpversion --force --skip-commit"
npm-install-options = "--legacy-peer-deps"
npm-cmd = "npm publish --tag latest"
release-message = "[ci skip] Publish {version}"
tag-message = "[ci skip] Release {tag_name}"

[tool.jupyter-releaser.hooks]
before-bump-version = ["git checkout .", "pip install bump2version"]
before-build-npm = ["jlpm run build:all"]
before-build-python = ["node buildutils/lib/local-repository start; true", "jlpm run before:build:python", "node buildutils/lib/local-repository stop", "node buildutils/lib/local-repository fix-links --path jupyterlab/staging"]
after-publish-assets = "npm run after:publish:assets"
